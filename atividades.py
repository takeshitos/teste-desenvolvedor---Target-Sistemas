# -*- coding: utf-8 -*-
"""Atividades.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18GWUQ9s7BtthahQ_ZKGbXw5izRkU8rE6
"""

# Atividade 2
# Recebe um número
num = int(input("Digite um número para ser analisado: "))

# Inicializa as duas primeiras posições da sequência de Fibonacci
fib1, fib2 = 0, 1

# While para calcular a sequência de Fibonacci até que o valor atual seja maior ou igual ao número informado
while fib2 < num:
    # Atualiza as variáveis para os próximos valores da sequência
    fib1, fib2 = fib2, fib1 + fib2
    
# Verifica se o número informado pertence à sequência
if fib2 == num:
    print(num, "pertence à sequência de Fibonacci.")
else:
    print(num, "não pertence à sequência de Fibonacci.")

# Atividade 3
import statistics
import json

# Entrada
entrada_json = '''
[
	{
		"dia": 1,
		"valor": 22174.1664
	},
	{
		"dia": 2,
		"valor": 24537.6698
	},
	{
		"dia": 3,
		"valor": 26139.6134
	},
	{
		"dia": 4,
		"valor": 0.0
	},
	{
		"dia": 5,
		"valor": 0.0
	},
	{
		"dia": 6,
		"valor": 26742.6612
	},
	{
		"dia": 7,
		"valor": 0.0
	},
	{
		"dia": 8,
		"valor": 42889.2258
	},
	{
		"dia": 9,
		"valor": 46251.174
	},
	{
		"dia": 10,
		"valor": 11191.4722
	},
	{
		"dia": 11,
		"valor": 0.0
	},
	{
		"dia": 12,
		"valor": 0.0
	},
	{
		"dia": 13,
		"valor": 3847.4823
	},
	{
		"dia": 14,
		"valor": 373.7838
	},
	{
		"dia": 15,
		"valor": 2659.7563
	},
	{
		"dia": 16,
		"valor": 48924.2448
	},
	{
		"dia": 17,
		"valor": 18419.2614
	},
	{
		"dia": 18,
		"valor": 0.0
	},
	{
		"dia": 19,
		"valor": 0.0
	},
	{
		"dia": 20,
		"valor": 35240.1826
	},
	{
		"dia": 21,
		"valor": 43829.1667
	},
	{
		"dia": 22,
		"valor": 18235.6852
	},
	{
		"dia": 23,
		"valor": 4355.0662
	},
	{
		"dia": 24,
		"valor": 13327.1025
	},
	{
		"dia": 25,
		"valor": 0.0
	},
	{
		"dia": 26,
		"valor": 0.0
	},
	{
		"dia": 27,
		"valor": 25681.8318
	},
	{
		"dia": 28,
		"valor": 1718.1221
	},
	{
		"dia": 29,
		"valor": 13220.495
	},
	{
		"dia": 30,
		"valor": 8414.61
	}
]'''

entrada = json.loads(entrada_json)

# Lista com os valores de faturamento diário
valores = [dia["valor"] for dia in entrada if dia["valor"] > 0]

# Cálculo do menor valor de faturamento
menor_valor = min(valores)

# Cálculo do maior valor de faturamento
maior_valor = max(valores)

# Cálculo da média mensal, ignorando os dias sem faturamento
media_mensal = statistics.mean(valores)

# Contagem do número de dias em que o valor de faturamento diário foi superior à média mensal
dias_acima_da_media = sum(1 for valor in valores if valor > media_mensal)

# Saída
print("Menor valor de faturamento:", menor_valor)
print("Maior valor de faturamento:", maior_valor)
print("Número de dias com faturamento acima da média mensal:", dias_acima_da_media)

# Atividade 4

faturamento = {
    'SP': 67836.43,
    'RJ': 36678.66,
    'MG': 29229.88,
    'ES': 27165.48,
    'Outros': 19849.53
}

# Calcula o valor total mensal
total = sum(faturamento.values())

# Calcula e imprime o percentual de representação de cada estado
for estado, valor in faturamento.items():
    percentual = (valor / total) * 100
    print(f'{estado}: {percentual:.2f}%')

# Atividade 5

# Recebe um número
texto = input("Digite uma String para ser invertida: ")
reverse = ""
for i in range(len(texto) - 1, -1, -1):
        reverse += texto[i]

print(reverse)